service: bar-tender

provider:
  name: aws
  runtime: java8
  region: us-east-2
  stage: ${opt:stage,'dev'}
  deploymentBucket:
    name: bar-${opt:stage,'dev'}-tender-deploy
  apiGateway:
    restApiId: ${env:API_ID}
    restApiRootResourceId: ${env:API_ROOT_ID}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource:
        - "*"
    - Effect: "Allow"
      Resource: "*"
      Action:
        - "sts:AssumeRole"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        - "*"
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

plugins:
  - serverless-ssm-seed
  - serverless-plugin-tracing
  - serverless-deployment-bucket
  - serverless-prune-plugin

defaults:

package:
  individually: true

custom:
  stage: ${self:custom.env.${self:provider.stage}}
  env:
    dev: dev
    stg: stg
    pro: pro
  autorizerId: ${ssm:/bb-${opt:stage,'dev'}/cc/share/cognito/autorizer-id}
  tableName: bar-tender-${self:custom.stage}-db
  bucketName: bar-tender-${opt:stage,'dev'}-db
  prune:
    automatic: true
    number: 5

functions:
  service:
    handler: co.com.bar.controllers.BarTenderController
    tracing: true
    environment:
      dynamoDbTable: ${self:custom.tableName}
    memorySize: 1024
    timeout: 30
    package:
      artifact: ${file(build/serverlessVersion.yml):bar-tender}
    events:
      - http:
          path: /bar-tender
          method: post
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: ${self:custom.autorizerId}
          cors:
            origin: '*'
            headers:
              - Content-Type
              - Authorization
              - X-Api-Key
              - X-Amz-Date
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - x-adl-bank-id
              - x-adl-channel
              - x-adl-transaction-id
              - x-adl-ip-addr
            allowCredentials: false
      - schedule:
          name: bb-${opt:stage,'dev'}-bar-tender-warm-up
          rate: cron(0/5 12-23 * * ? *)
          enabled: true
          input: '{"body": null}'

resources:
  Resources:
    ApiGatewayMethodBarDashtenderPost:
      Type: "AWS::ApiGateway::Method"
      Properties:
        AuthorizationScopes:
          - "bocc-busicapa-api/read"
